<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>net.breezeware.dynamo</groupId>
		<artifactId>dynamo-drools-template</artifactId>
		<version>2.3.3</version>
	</parent>
	<artifactId>dynamo-drools-webapp</artifactId>
	<packaging>war</packaging>
	<name>Dynamo Drools Webapp</name>
	<description>Sample project for creating a Drools web application using Dynamo. 
	This web application uses KJARs provided to them as JAR dependencies.</description>


	<properties>
		<java.version>13</java.version>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>13</maven.compiler.target>
		<dynamo-framework.version>2.2.0</dynamo-framework.version>
	</properties>
	
	<repositories>
		<repository>
			<id>mavenrepositorydotcom</id>
			<url>https://mvnrepository.com</url>
		</repository>

		<!-- Dynamo repository on Leapforge -->
		<repository>
			<id>nexus-leapforge-dynamo-snapshots</id>
			<url>http://nexus.leapforge.net/repository/dynamo-snapshots/</url>
			<name>Dynamo Snapshots Repository on Leapforge using Nexus</name>
		</repository>

		<!-- Dynamo snapshots repository on Leapforge -->
		<repository>
			<id>nexus-leapforge-dynamo</id>
			<url>http://nexus.leapforge.net/repository/dynamo/</url>
			<name>Dynamo Release Repository on Leapforge using Nexus</name>
		</repository>
	</repositories>
	
	
	
	<dependencyManagement>
		<dependencies>

			<!-- ******************** Dynamo Dependencies ******************** -->
			<dependency>
				<groupId>net.breezeware.dynamo</groupId>
				<artifactId>dynamo-dependencies</artifactId>
				<version>${dynamo-framework.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<!-- ******************** Dynamo Framework BOM ******************** -->
			<dependency>
				<groupId>net.breezeware.dynamo</groupId>
				<artifactId>dynamo-framework-bom</artifactId>
				<version>${dynamo-framework.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<!-- #################### DEPENDENCIES #################### -->

	<dependencies>


		<dependency>
			<groupId>net.breezeware.dynamo</groupId>
			<artifactId>dynamo-auth-lib</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-config-server</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.cloud</groupId>
					<artifactId>spring-cloud-config-client</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


	<!-- JSON for compilation error -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20201115</version>
		</dependency>
		<!-- ******************** Dynamo Drools KJar ******************** -->

		<dependency>
			<groupId>net.breezeware.dynamo</groupId>
			<artifactId>dynamo-drools-kjar</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>net.breezeware.dynamo</groupId>
			<artifactId>dynamo-drools-lib</artifactId>
			<version>${project.version}</version>
		</dependency>


		<dependency>
			<groupId>org.springframework.security.oauth.boot</groupId>
			<artifactId>spring-security-oauth2-autoconfigure</artifactId>
		</dependency>


		<!-- ******************** Drools Library ******************** -->
		<!-- <dependency> <groupId>org.drools</groupId> <artifactId>drools-core</artifactId> 
			</dependency> <dependency> <groupId>org.drools</groupId> <artifactId>drools-compiler</artifactId> 
			<exclusions> <exclusion> <groupId>org.eclipse.jdt.core.compiler</groupId> 
			<artifactId>ecj</artifactId> </exclusion> </exclusions> </dependency> <dependency> 
			<groupId>org.kie</groupId> <artifactId>kie-api</artifactId> </dependency> 
			<dependency> <groupId>org.mvel</groupId> <artifactId>mvel2</artifactId> </dependency> 
			<dependency> <groupId>org.eclipse.jdt.core.compiler</groupId> <artifactId>ecj</artifactId> 
			</dependency> -->



	<!-- ******************** Spring Boot starter web ******************** -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!-- <exclusions> <exclusion> <groupId>org.springframework.boot</groupId> 
				<artifactId>spring-boot-starter-tomcat</artifactId> </exclusion> </exclusions> -->
		</dependency>
		
		 <!-- ******************** Spring Boot JPA starter ******************** -->
		 <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency> 

	
		<!-- Java Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
		</dependency>

		 <!-- ******************** Spring Boot starter Jersey ******************** -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.glassfish.jersey.ext</groupId>
					<artifactId>jersey-spring3</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-validation</artifactId>
				</exclusion>
			</exclusions>
		</dependency> 


<!-- ******************** Spring data dialect support ******************** -->
		<dependency>
			<groupId>io.github.jpenren</groupId>
			<artifactId>thymeleaf-spring-data-dialect</artifactId>
			<!-- <exclusions> <exclusion> <groupId>org.thymeleaf</groupId> <artifactId>thymeleaf</artifactId> 
				</exclusion> <exclusion> <groupId>org.springframework.data</groupId> <artifactId>spring-data-commons</artifactId> 
				</exclusion> </exclusions> -->
		</dependency>

		<!-- ******************** Spring layout dialect support ******************** -->
		<dependency>
			<groupId>nz.net.ultraq.thymeleaf</groupId>
			<artifactId>thymeleaf-layout-dialect</artifactId>
			<!-- <exclusions> <exclusion> <groupId>org.thymeleaf</groupId> <artifactId>thymeleaf</artifactId> 
				</exclusion> </exclusions> -->
		</dependency>

		<!-- ******************** Swagger Documentation ******************** -->

		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>swagger-ui</artifactId>
		</dependency>

		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-core</artifactId>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.ws.rs</groupId>
					<artifactId>jsr311-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.wordnik</groupId>
			<artifactId>swagger-annotations</artifactId>
		</dependency>


	</dependencies>

	<!-- #################### BUILD CONFIGURATIONS #################### -->

	<build>
		<finalName>${project.artifactId}</finalName>

		<plugins>
			<!-- Skip installation of WAR file in the local repository -->
			<plugin>
				<artifactId>maven-install-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
